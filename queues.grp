digraph {
	rankdir=TB;
	node [fontsize=8]

	
subgraph cluster_reader
{
	node[shape="box"]
	label="Reader loop"
	r_s0 [label="Start",shape=circle]
	r_0 [label="writing = 0\nreading = 1",color=red]
	r_1 [label=READ,shape=circle]
	r_s1 [label="invariant (reading)"]
	r_check [label="writing==0\n OR \nused==0",shape="diamond",color=green]
	r_wait  [label="wait for data"]
	r_get_wr [label="GET wr",colro=blue]
	r_calc [label="size\nwr-rd OR max-rd"]
	r_send [label="Send",shape=circle]
	r_adj [label="rd += n\nif rd == end\nrd=buff",color=blue]
	r_10 [label="used -= n",color=red]
	r_end [label="STOP",shape=circle]
	r_11 [label="reading = 0\nwritting = 0",color=red]
	r_12 [label="END",shape=circle]
	
	r_s0 -> r_0
	r_0 -> r_1;
	r_1 -> r_s1;
	r_s1 -> r_check
	r_check -> r_wait [label="true"]
	r_check -> r_get_wr [label="false"]
	r_wait -> r_get_wr;
	r_get_wr -> r_calc;
	r_calc -> r_send;
	r_send -> r_adj
    r_adj -> r_10;
    r_10 -> r_end
    r_end -> r_11;
    r_11 -> r_12
    r_end -> READ[constrains=true,style=dotted]
} 

subgraph cluster_writer  
{
	label="Writer loop"
	node [shape=box]
	rank=max;
	w000 [label=START,shape=circle]
	w001 [label="writing==0",shape=diamond,color=blue]
	w0011 [label="Reset\nrd=wr=next=start\nused=0"]
	w0012 [label="writing = 1",color=red]
	w0013 [label="reading = 1",shape=diamond,color=blue]
	w0014 [label="used == 0"]
	w0015 [label="rd=wr=next=start\nnext-size=max-1"];
	w_next[label="request < next_size",shape=diamond]
	w_st [label="request < available",shape=diamond]
	w0020 [label="Write",shape=circle]
	w_adj [label="calculate next_size\nGET rd_ptr",color=blue]
	w_st -> OVERFLOW [label="no"]
	w_st -> w_adj [label="yes"]
	w0022 [label="writing == 1\n&&\nreading == 1",color=blue,shape=diamond]
	w0022 -> Exit1 [label="no"]
	w0020 -> w0022;
	w0022 -> wr_add1 [label="yes"]
	w_adj -> w0020;
	w_next -> w0020 [label="yes"]
	w_next -> w_st [label="no"]
	wr_add1 [label="write max min(request < size)"]
	wr_add2 [label="next++\nlen--\nnext_size--"]
	wr_add3 [label="next == max",shape=diamond]
	wr_add4 [label="next=start\nnext_size = X"]
	wr_add5 [label="ERROR if remaining data"]
	wr_add6 [label="invariant (next_size >= len) "]
	w0030 [label="len > 0",shape=diamond]
	w0040 [label="Commit",shape=circle]
	w0041 [label="wr = next\nused++",color=blue]
	w00411 [label="if used was 0\nSIGNAL"]	
	w0044 [label="End",shape=circle]
	w0012 -> w0013;
	w0013 -> w0014 [label="yes"]
	w0014 -> w0015 [label=yes]
	w0015 -> w_next
	w0014 -> w_next [label=no]
	w000 -> w001
	w001 -> w0011 [label=yes]
	w0011 -> w0012;
	w0030 -> wr_add1 [label=yes]
	wr_add6 -> w0030
	
	w001->w0013 [label=no]
	wr_add1 -> wr_add2;
	wr_add2 -> wr_add3;
	wr_add3 -> wr_add4 [label="yes"]
	wr_add3 -> wr_add5 [label="no"]
	wr_add4 -> wr_add6;
	w0013 -> END [label="no"]
	w0030 -> w0040 [label="no"]
	w0040 -> w0041
	w0041 -> w00411
	w00411 -> w0044
}



}